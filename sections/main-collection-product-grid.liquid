{% liquid
  assign active_filters_values = 0
  for filter in collection.filters
    if filter.active_values.size > 0
      assign active_filters_values = active_filters_values | plus: filter.active_values.size
    endif
    if filter.min_value.value != null or filter.max_value.value != null
      assign active_filters_values = active_filters_values | plus: 1
    endif
  endfor
  assign loading = 'eager'
  assign fetchpriority = 'auto'
  if section.index == 1
    assign fetchpriority = 'high'
  elsif section.index > 2
    assign loading = 'lazy'
  endif

  assign filter_type_drawer = false
  if section.settings.desktop_filter_type == 'drawer'
    assign filter_type_drawer = true
  endif
%}

{{ 'section-main-collection-product-grid.css' | asset_url | stylesheet_tag }}
<script defer="defer" src="{{ 'collection.js' | asset_url }}"></script>
<script src="{{ 'toggle-filter-sidebar.js' | asset_url}}" defer="defer"></script>

{% comment %} Filter Layout styles  {% endcomment %}
<link
  rel="stylesheet"
  {%- if filter_type_drawer -%}
    media="print" onload="this.media='all'"
  {%- else -%}
    media="all"
  {%- endif -%}
  href="{{ 'section-drawer-filter.css' | asset_url }}"
>
<script defer="defer" src="{{ 'filter-drawer.js' | asset_url }}"></script>

{% liquid
  assign product_per_page = section.settings.products_per_page
  assign sort_by = collection.sort_by | default: collection.default_sort_by
  if collection.url
    assign results_url = collection.url
  endif
-%}

{% style %}
  .section-{{ section.id }}-padding {
     padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 | append: 'px' }};
     padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 | append: 'px' }};
   }

   @media screen and (min-width: 750px) {
     .section-{{ section.id }}-padding {
       padding-top: {{ section.settings.padding_top | append: 'px' }};
       padding-bottom: {{ section.settings.padding_bottom | append: 'px' }};
     }
   }
{% endstyle %}

<div
  class="collectionList product_collection section-{{ section.id }}-padding color-{{ section.settings.color_scheme }}"
  show-filter-sidebar="true"
>
  <div class="container">
    <div id="collection-grid" data-id="{{ section.id }}" aria-label="{{ collection.title }}" role="region">
      <div class="collectionList__filter">
        {% if section.settings.show_filters and collection.filters.size > 0 %}
          <div class="collectionList__filterOption">
            <div class="filter-button-wrapper {% unless filter_type_drawer %} mobile-only {% endunless %}">
              <span class="collection__product__count mobile-only"> {{ collection.products_count }} products </span>
              {% render 'filter-button', filters: collection.filters, active_filters_values: active_filters_values %}
            </div>
            {% comment %} No script Filters Submit Buttons{% endcomment %}
            <noscript>
              {% unless filter_type_drawer %}
                <button
                  type="submit"
                  form="filter-sidebar-form"
                  class="apply__filter-parent collectionList__filterDropdown desktop-only btn btn--border"
                >
                  <p class="mb-0 sort-by-text text-color">{{ 'general.search.apply_filter' | t }}</p>
                  <span class="apply__filter"> {% render 'icon' with 'filter' %} </span>
                </button>
              {% endunless %}
            </noscript>
            {% comment %}
              {%- if active_filters_values > 0 -%}
                <facet-remove>
                  <a class="link clear-filter js-clear-filter" href="{{ results_url }}" tabindex="0"><span>{{ 'general.filter.clear_filter' | t | upcase }}</span></a>
                </facet-remove>
              {%- endif -%}
            {% endcomment %}
            {% unless filter_type_drawer %}
              <toggle-filter-sidebar
                class="filter__sidebar--visibility desktop-only"
                filter__sidebar--visibility__button
              >
                <span class="filter__sidebar--visibility--hidden">
                  {{- 'general.filter.hide_filter_button_text' | t }}
                  {% render 'icon' with 'filter' %}
                </span>
                <span class="filter__sidebar--visibility--show">
                  {{- 'general.filter.show_filter_button_text' | t }}
                  {% render 'icon' with 'filter' %}
                </span>
              </toggle-filter-sidebar>
            {% endunless %}
            <span class="collection__product__count desktop-only">
              {{
                'collections.general.filter.active_filtered_products'
                | t: filtered_product_count: collection.products_count
              }}
            </span>
          </div>
        {% endif %}
        {% if collection.products_count > 0 and section.settings.show_sort_by %}
          <filter-component>
            <form id="filter-sortBy-form" class="sortBy-form">
              <div class="collectionList__filterDropdown">
                <label for="sort-by" class="mb-0 sort-by-text text-color desktop-only">
                  {{- 'general.sort.title' | t | capitalize -}}
                </label>
                {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}

                <div class="select-wrapper">
                  <select id="sort-by" name="sort_by" class="filter-select" aria-label="Sort Dropdown" tabindex="0">
                    {% for option in collection.sort_options %}
                      <option
                        value="{{ option.value | escape }}"
                        {% if option.value == sort_by %}
                          selected="selected"
                        {% endif %}
                      >
                        {{ option.name | escape }}
                      </option>
                    {% endfor %}
                  </select>
                  {%- render 'icon' with 'caret' -%}
                </div>

                <noscript>
                  {% comment %} {% else %}{%endif%} {% endcomment %}
                  <div class="select-wrapper">
                    <label for="sort-by" class="mb-0 sort-by-text text-color visually-hidden">
                      {{- 'general.sort.title' | t | capitalize -}}
                    </label>
                    {% if section.settings.desktop_filter_type == 'sidebar' %}
                      <select
                        id="sort-by"
                        name="sort_by"
                        class="filter-select desktop-only"
                        aria-label="Sort Dropdown"
                        tabindex="0"
                        form="filter-sidebar-form"
                      >
                        {% for option in collection.sort_options %}
                          <option
                            value="{{ option.value | escape }}"
                            {% if option.value == sort_by %}
                              selected="selected"
                            {% endif %}
                          >
                            {{ option.name | escape }}
                          </option>
                        {% endfor %}
                      </select>

                      <select
                        id="sort-by"
                        name="sort_by"
                        class="filter-select mobile-only"
                        aria-label="Sort Dropdown"
                        tabindex="0"
                        form="filter-drawer-form"
                      >
                        {% for option in collection.sort_options %}
                          <option
                            value="{{ option.value | escape }}"
                            {% if option.value == sort_by %}
                              selected="selected"
                            {% endif %}
                          >
                            {{ option.name | escape }}
                          </option>
                        {% endfor %}
                      </select>
                      {%- render 'icon' with 'caret' -%}
                    {% else %}
                      <select
                        id="sort-by"
                        name="sort_by"
                        class="filter-select"
                        aria-label="Sort Dropdown"
                        tabindex="0"
                        form="filter-drawer-form"
                      >
                        {% for option in collection.sort_options %}
                          <option
                            value="{{ option.value | escape }}"
                            {% if option.value == sort_by %}
                              selected="selected"
                            {% endif %}
                          >
                            {{ option.name | escape }}
                          </option>
                        {% endfor %}
                      </select>
                      {%- render 'icon' with 'caret' -%}
                    {% endif %}
                  </div>
                </noscript>
              </div>
              <noscript>
                <button
                  type="submit"
                  class="btn btn--border {% if section.settings.desktop_filter_type == 'sidebar' %}desktop-only{% endif %}"
                  form="filter-sidebar-form"
                  {% unless section.settings.desktop_filter_type == 'sidebar' %}
                    style="display: none";
                  {% endunless %}
                >
                  {{ 'collections.general.sort.title' | t }}
                </button>
                <button
                  type="submit"
                  class="btn btn--border h-100 {% if section.settings.desktop_filter_type == 'sidebar' %}mobile-only{% endif %}"
                  form="filter-drawer-form"
                >
                  {{ 'collections.general.sort.title' | t }}
                </button>
              </noscript>
            </form>
          </filter-component>
        {% endif %}
      </div>
      <div>
        {% render 'active-filters',
          filters: collection.filters,
          active_filters_values: active_filters_values,
          results_url: results_url
        %}
        {% if section.settings.desktop_filter_type == 'sidebar' %}
          <div class="filter-layout__wrapper {% unless section.settings.show_filters and collection.filters.size > 0 %} grid-layout--1-desktop {% endunless %}">
            {% if section.settings.show_filters and collection.filters.size > 0 %}
              {% render 'filter-sidebar',
                results: collection,
                color_swatches: section.settings.swatches,
                filter_accordion: section.settings.filter_accordion,
                show_product_tags_to_filter: section.settings.show_product_tags_to_filter
              %}
            {% endif %}
        {% endif %}
        <div class="filter-layout__products__wrapper">
          {% if collection.products_count > 0 %}
            {% paginate collection.products by product_per_page %}
              <div grid-layout-container>
                <div class="collection-grid-preloader" data-collection-preloader></div>
                <animation-reveal
                  aoi-type="fade-up"
                  aoi-amount="0.03"
                  class="collectionList__trending grid-layout grid-layout--{{ section.settings.columns_desktop }}-desktop grid-layout--{{ section.settings.columns_mobile }}-mobile"
                >
                  {%- for product in collection.products -%}
                    {% if forloop.index > 4 and loading == 'eager' %}
                      {% assign loading = 'lazy' %}
                    {% endif %}
                    <div class="collectionList__item">
                      {%-
                        render 'card-product'
                        , product: product,
                        , product_image_loading: loading
                        , product_image_fetchpriority: fetchpriority
                      -%}
                    </div>
                  {%- endfor -%}
                </animation-reveal>
              </div>
              {% render 'pagination', paginate: paginate %}
            {% endpaginate %}
          {% else %}
            {{ 'general.drawer.filter.filter_empty_results_html' | t: link: results_url }}
          {% endif %}
        </div>
      </div>
    </div>
    {% if section.settings.desktop_filter_type == 'sidebar' %}
      <div class="mobile-only">
    {% endif %}
    {% render 'filter-drawer',
      results: collection,
      color_swatches: section.settings.swatches,
      clear_url: results_url,
      filter_accordion: section.settings.filter_accordion,
      show_product_tags_to_filter: section.settings.show_product_tags_to_filter
    %}
    {% if section.settings.desktop_filter_type == 'sidebar' %}
      </div>
    {% endif %}
  </div>
</div>

{% schema %}
{
  "name": "Product grid",
  "tag": "section",
  "settings": [
    {
      "type": "header",
      "content": "Layout settings"
    },
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 24,
      "step": 4,
      "default": 16,
      "label": "Products per page"
    },
    {
      "type": "select",
      "id": "columns_desktop",
      "label": "Number of columns on desktop",
      "options": [
        {
          "label": "2",
          "value": "2"
        },
        {
          "label": "3",
          "value": "3"
        },
        {
          "label": "4",
          "value": "4"
        },
        {
          "label": "5",
          "value": "5"
        }
      ],
      "default": "4"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "label": "1",
          "value": "1"
        },
        {
          "label": "2",
          "value": "2"
        }
      ],
      "label": "Number of columns on mobile"
    },
    {
      "type": "header",
      "content": "Filters & sort"
    },
    {
      "type": "checkbox",
      "id": "show_sort_by",
      "label": "Enable sorting",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_filters",
      "label": "Enable filtering",
      "info": "[Customize filters](/admin/menus)",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_filter_group_name",
      "label": "Show filter group name",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_product_tags_to_filter",
      "label": "Show product tags",
      "default": true
    },
    {
      "type": "select",
      "id": "desktop_filter_type",
      "label": "Desktop filter type",
      "options": [
        {
          "label": "Sidebar",
          "value": "sidebar"
        },
        {
          "label": "Drawer",
          "value": "drawer"
        }
      ],
      "default": "sidebar"
    },
    {
      "type": "select",
      "id": "filter_accordion",
      "label": "Filter accordian",
      "options": [
        {
          "label": "Open",
          "value": "open"
        },
        {
          "label": "Only First",
          "value": "only_first"
        },
        {
          "label": "Closed",
          "value": "closed"
        }
      ],
      "default": "closed"
    },
    {
      "type": "header",
      "content": "Appearance"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "default": "scheme-1",
      "label": "Color scheme"
    }
  ]
}
{% endschema %}
